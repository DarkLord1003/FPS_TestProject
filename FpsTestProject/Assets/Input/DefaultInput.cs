//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Input/DefaultInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DefaultInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DefaultInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DefaultInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""d7ba5c8a-bc09-4e91-b4cf-877b41816e51"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5d31398d-0824-4086-bafb-b218f94d009a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""View"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3c8fcc86-2c19-4f7b-8f90-9039e4a48615"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""aff796fb-cf45-4579-b09f-f78a5baba378"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SprintPress"",
                    ""type"": ""Button"",
                    ""id"": ""218ded23-2a24-416d-adbe-b13362ec14db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SprintRealised"",
                    ""type"": ""Button"",
                    ""id"": ""0c104a1e-a755-4f53-9db5-0b2da50722f0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""076177ef-2e57-42a1-b114-850ffa817521"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Prone"",
                    ""type"": ""Button"",
                    ""id"": ""edc060be-f890-471f-8f43-177ab6663a57"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimingPress"",
                    ""type"": ""Button"",
                    ""id"": ""83801bb2-6344-4be9-931a-a6cd4757a6b5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimingRealised"",
                    ""type"": ""Button"",
                    ""id"": ""5ebf382d-d67b-4e1c-85b1-5f927c883cff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""2d623441-f576-45ae-8532-b501d8951380"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""61c1acb4-6a39-4fb8-b9bc-9aa27887c9de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""fdeeeed4-9954-4386-8582-82c9021a1bbd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShootRealised"",
                    ""type"": ""Button"",
                    ""id"": ""97f2b90e-8cca-46f9-a54b-b5b38d27fee4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeShootType"",
                    ""type"": ""Button"",
                    ""id"": ""4c5044a7-cb47-48f9-807f-3f60879779dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Alpha1"",
                    ""type"": ""Button"",
                    ""id"": ""14e6248c-49af-4b41-b6e4-df7cb728912c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Alpha2"",
                    ""type"": ""Button"",
                    ""id"": ""f14f2b9a-70ee-43cd-8412-b4bff367ae6e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Alpha3"",
                    ""type"": ""Button"",
                    ""id"": ""e03b62e4-be94-4e6b-96f7-e342db5bc769"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use"",
                    ""type"": ""Button"",
                    ""id"": ""86debe3f-b044-418f-b9dd-030d6126a76a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Alpha4"",
                    ""type"": ""Button"",
                    ""id"": ""3bd43201-b2b0-47d4-bcde-fb0404405eb7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickUpItem"",
                    ""type"": ""Button"",
                    ""id"": ""06f41baf-feeb-4a4b-b8e7-73f6390e4b1a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throw"",
                    ""type"": ""Button"",
                    ""id"": ""33f3ba6f-0b2f-4b3c-9deb-dafb29f6c821"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseHands"",
                    ""type"": ""Button"",
                    ""id"": ""b7e8ec83-511c-43dd-8df5-8398bd49d0c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""f85c661d-5b51-4913-a958-ae23fa1e498d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""560daba6-7fb5-4cc3-aa39-a0546c5e0c32"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""654a4275-2954-4d37-a61f-d29edc1fb6fa"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c61472ff-c74c-4279-b75a-6dfe2d5cae49"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""990b0828-9332-458f-9ad0-1707b2356cb9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow"",
                    ""id"": ""09b76502-b95f-4bf5-90c7-794aa96bca45"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""794d5020-efe7-42d2-9723-2676b779c19f"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9056e67c-2dc2-436a-9d9f-ee6c93f91b51"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3bbfbb32-419a-4671-b854-4bb787ab8fae"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8b75cb36-6f4c-4944-9b94-660b6b8c9bc9"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e69c49ef-6660-4141-bc2a-8a4f263adb72"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""View"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27244b0d-a52b-46e0-a222-00b955a5e443"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a312605d-3501-4533-8f11-f87604e08f41"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SprintPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef49fbdc-b007-4d0a-8505-0654c39d6fe1"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df8bb1e4-9ba8-4d80-8a0f-03e53285a9d9"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Prone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""259c9ea4-a3c4-4ffb-b78f-6bceb8630a9b"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SprintRealised"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0fa7153c-589e-4194-93d8-8c820a26ca74"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimingPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a0df5bf-a1b2-4679-b42e-816d84411cea"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimingRealised"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5667feb8-9dd4-4cc4-baf2-0457cc37f52f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e32159f-aee1-4aca-983d-0922a174a6e1"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d8581f7-8231-4f91-be9a-01edf4b357f2"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d97d1cfd-7807-4c11-a331-7c118612d29c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootRealised"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1904579e-77a8-402d-9000-906c290aed5d"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeShootType"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7aa14d8c-f94a-4fdb-8187-817e00c240ce"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Alpha1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04cf32ca-03d7-4cb3-9b1c-c2d1e6f74a5b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Alpha2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55355c3f-6e06-45bc-9548-60dd3b8c62c6"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Alpha3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c57821dd-321b-4093-840d-cef0b0d7e0f1"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ff44937-4941-497e-a8de-409a503d7284"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Alpha4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d4b3480-a0cc-410d-b072-6cfee0b61bfc"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickUpItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5db8559-ee81-4d7c-bf19-88a67098c5c4"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""488ec472-ced9-43f4-a86b-3290678326ea"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseHands"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""9fa89919-1f9a-4c21-be59-7762041e9598"",
            ""actions"": [
                {
                    ""name"": ""OpenInventory"",
                    ""type"": ""Button"",
                    ""id"": ""847ff97d-5a6d-4d75-a473-d6042c6e727e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""74755527-2c86-42de-b8dc-5ab4e8d014c4"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_View = m_Player.FindAction("View", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_SprintPress = m_Player.FindAction("SprintPress", throwIfNotFound: true);
        m_Player_SprintRealised = m_Player.FindAction("SprintRealised", throwIfNotFound: true);
        m_Player_Crouch = m_Player.FindAction("Crouch", throwIfNotFound: true);
        m_Player_Prone = m_Player.FindAction("Prone", throwIfNotFound: true);
        m_Player_AimingPress = m_Player.FindAction("AimingPress", throwIfNotFound: true);
        m_Player_AimingRealised = m_Player.FindAction("AimingRealised", throwIfNotFound: true);
        m_Player_Shoot = m_Player.FindAction("Shoot", throwIfNotFound: true);
        m_Player_Reload = m_Player.FindAction("Reload", throwIfNotFound: true);
        m_Player_Aim = m_Player.FindAction("Aim", throwIfNotFound: true);
        m_Player_ShootRealised = m_Player.FindAction("ShootRealised", throwIfNotFound: true);
        m_Player_ChangeShootType = m_Player.FindAction("ChangeShootType", throwIfNotFound: true);
        m_Player_Alpha1 = m_Player.FindAction("Alpha1", throwIfNotFound: true);
        m_Player_Alpha2 = m_Player.FindAction("Alpha2", throwIfNotFound: true);
        m_Player_Alpha3 = m_Player.FindAction("Alpha3", throwIfNotFound: true);
        m_Player_Use = m_Player.FindAction("Use", throwIfNotFound: true);
        m_Player_Alpha4 = m_Player.FindAction("Alpha4", throwIfNotFound: true);
        m_Player_PickUpItem = m_Player.FindAction("PickUpItem", throwIfNotFound: true);
        m_Player_Throw = m_Player.FindAction("Throw", throwIfNotFound: true);
        m_Player_UseHands = m_Player.FindAction("UseHands", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_OpenInventory = m_UI.FindAction("OpenInventory", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_View;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_SprintPress;
    private readonly InputAction m_Player_SprintRealised;
    private readonly InputAction m_Player_Crouch;
    private readonly InputAction m_Player_Prone;
    private readonly InputAction m_Player_AimingPress;
    private readonly InputAction m_Player_AimingRealised;
    private readonly InputAction m_Player_Shoot;
    private readonly InputAction m_Player_Reload;
    private readonly InputAction m_Player_Aim;
    private readonly InputAction m_Player_ShootRealised;
    private readonly InputAction m_Player_ChangeShootType;
    private readonly InputAction m_Player_Alpha1;
    private readonly InputAction m_Player_Alpha2;
    private readonly InputAction m_Player_Alpha3;
    private readonly InputAction m_Player_Use;
    private readonly InputAction m_Player_Alpha4;
    private readonly InputAction m_Player_PickUpItem;
    private readonly InputAction m_Player_Throw;
    private readonly InputAction m_Player_UseHands;
    public struct PlayerActions
    {
        private @DefaultInput m_Wrapper;
        public PlayerActions(@DefaultInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @View => m_Wrapper.m_Player_View;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @SprintPress => m_Wrapper.m_Player_SprintPress;
        public InputAction @SprintRealised => m_Wrapper.m_Player_SprintRealised;
        public InputAction @Crouch => m_Wrapper.m_Player_Crouch;
        public InputAction @Prone => m_Wrapper.m_Player_Prone;
        public InputAction @AimingPress => m_Wrapper.m_Player_AimingPress;
        public InputAction @AimingRealised => m_Wrapper.m_Player_AimingRealised;
        public InputAction @Shoot => m_Wrapper.m_Player_Shoot;
        public InputAction @Reload => m_Wrapper.m_Player_Reload;
        public InputAction @Aim => m_Wrapper.m_Player_Aim;
        public InputAction @ShootRealised => m_Wrapper.m_Player_ShootRealised;
        public InputAction @ChangeShootType => m_Wrapper.m_Player_ChangeShootType;
        public InputAction @Alpha1 => m_Wrapper.m_Player_Alpha1;
        public InputAction @Alpha2 => m_Wrapper.m_Player_Alpha2;
        public InputAction @Alpha3 => m_Wrapper.m_Player_Alpha3;
        public InputAction @Use => m_Wrapper.m_Player_Use;
        public InputAction @Alpha4 => m_Wrapper.m_Player_Alpha4;
        public InputAction @PickUpItem => m_Wrapper.m_Player_PickUpItem;
        public InputAction @Throw => m_Wrapper.m_Player_Throw;
        public InputAction @UseHands => m_Wrapper.m_Player_UseHands;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @View.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnView;
                @View.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnView;
                @View.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnView;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @SprintPress.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprintPress;
                @SprintPress.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprintPress;
                @SprintPress.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprintPress;
                @SprintRealised.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprintRealised;
                @SprintRealised.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprintRealised;
                @SprintRealised.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprintRealised;
                @Crouch.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                @Prone.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnProne;
                @Prone.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnProne;
                @Prone.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnProne;
                @AimingPress.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAimingPress;
                @AimingPress.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAimingPress;
                @AimingPress.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAimingPress;
                @AimingRealised.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAimingRealised;
                @AimingRealised.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAimingRealised;
                @AimingRealised.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAimingRealised;
                @Shoot.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                @Reload.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReload;
                @Aim.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAim;
                @ShootRealised.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShootRealised;
                @ShootRealised.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShootRealised;
                @ShootRealised.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShootRealised;
                @ChangeShootType.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeShootType;
                @ChangeShootType.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeShootType;
                @ChangeShootType.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeShootType;
                @Alpha1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAlpha1;
                @Alpha1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAlpha1;
                @Alpha1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAlpha1;
                @Alpha2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAlpha2;
                @Alpha2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAlpha2;
                @Alpha2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAlpha2;
                @Alpha3.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAlpha3;
                @Alpha3.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAlpha3;
                @Alpha3.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAlpha3;
                @Use.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUse;
                @Use.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUse;
                @Use.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUse;
                @Alpha4.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAlpha4;
                @Alpha4.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAlpha4;
                @Alpha4.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAlpha4;
                @PickUpItem.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickUpItem;
                @PickUpItem.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickUpItem;
                @PickUpItem.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickUpItem;
                @Throw.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnThrow;
                @Throw.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnThrow;
                @Throw.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnThrow;
                @UseHands.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUseHands;
                @UseHands.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUseHands;
                @UseHands.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUseHands;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @View.started += instance.OnView;
                @View.performed += instance.OnView;
                @View.canceled += instance.OnView;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @SprintPress.started += instance.OnSprintPress;
                @SprintPress.performed += instance.OnSprintPress;
                @SprintPress.canceled += instance.OnSprintPress;
                @SprintRealised.started += instance.OnSprintRealised;
                @SprintRealised.performed += instance.OnSprintRealised;
                @SprintRealised.canceled += instance.OnSprintRealised;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Prone.started += instance.OnProne;
                @Prone.performed += instance.OnProne;
                @Prone.canceled += instance.OnProne;
                @AimingPress.started += instance.OnAimingPress;
                @AimingPress.performed += instance.OnAimingPress;
                @AimingPress.canceled += instance.OnAimingPress;
                @AimingRealised.started += instance.OnAimingRealised;
                @AimingRealised.performed += instance.OnAimingRealised;
                @AimingRealised.canceled += instance.OnAimingRealised;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
                @ShootRealised.started += instance.OnShootRealised;
                @ShootRealised.performed += instance.OnShootRealised;
                @ShootRealised.canceled += instance.OnShootRealised;
                @ChangeShootType.started += instance.OnChangeShootType;
                @ChangeShootType.performed += instance.OnChangeShootType;
                @ChangeShootType.canceled += instance.OnChangeShootType;
                @Alpha1.started += instance.OnAlpha1;
                @Alpha1.performed += instance.OnAlpha1;
                @Alpha1.canceled += instance.OnAlpha1;
                @Alpha2.started += instance.OnAlpha2;
                @Alpha2.performed += instance.OnAlpha2;
                @Alpha2.canceled += instance.OnAlpha2;
                @Alpha3.started += instance.OnAlpha3;
                @Alpha3.performed += instance.OnAlpha3;
                @Alpha3.canceled += instance.OnAlpha3;
                @Use.started += instance.OnUse;
                @Use.performed += instance.OnUse;
                @Use.canceled += instance.OnUse;
                @Alpha4.started += instance.OnAlpha4;
                @Alpha4.performed += instance.OnAlpha4;
                @Alpha4.canceled += instance.OnAlpha4;
                @PickUpItem.started += instance.OnPickUpItem;
                @PickUpItem.performed += instance.OnPickUpItem;
                @PickUpItem.canceled += instance.OnPickUpItem;
                @Throw.started += instance.OnThrow;
                @Throw.performed += instance.OnThrow;
                @Throw.canceled += instance.OnThrow;
                @UseHands.started += instance.OnUseHands;
                @UseHands.performed += instance.OnUseHands;
                @UseHands.canceled += instance.OnUseHands;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_OpenInventory;
    public struct UIActions
    {
        private @DefaultInput m_Wrapper;
        public UIActions(@DefaultInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @OpenInventory => m_Wrapper.m_UI_OpenInventory;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @OpenInventory.started -= m_Wrapper.m_UIActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnOpenInventory;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @OpenInventory.started += instance.OnOpenInventory;
                @OpenInventory.performed += instance.OnOpenInventory;
                @OpenInventory.canceled += instance.OnOpenInventory;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnView(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSprintPress(InputAction.CallbackContext context);
        void OnSprintRealised(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnProne(InputAction.CallbackContext context);
        void OnAimingPress(InputAction.CallbackContext context);
        void OnAimingRealised(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnShootRealised(InputAction.CallbackContext context);
        void OnChangeShootType(InputAction.CallbackContext context);
        void OnAlpha1(InputAction.CallbackContext context);
        void OnAlpha2(InputAction.CallbackContext context);
        void OnAlpha3(InputAction.CallbackContext context);
        void OnUse(InputAction.CallbackContext context);
        void OnAlpha4(InputAction.CallbackContext context);
        void OnPickUpItem(InputAction.CallbackContext context);
        void OnThrow(InputAction.CallbackContext context);
        void OnUseHands(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnOpenInventory(InputAction.CallbackContext context);
    }
}
